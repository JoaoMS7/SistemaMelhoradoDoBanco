import textwrap

def menu():
    menu = """\n
==========MENU==========
[d]\tDepósito
[s]\tSacar
[e]\tExtrato
[nc]\tNova Conta
[lc]\tLista de Contas
[nu]\tNovo Usuário
[q]\tSair
=> """
    return input(textwrap.dedent(menu))

def deposito(saldo,valor,extrato,/):
    if valor > 0:
        saldo += valor
        extrato += f"Depósito:\tR$ {valor:.2f}\n"
        print("\n=== Depósito realizado com sucesso ===\n")
    else:
        print("\n@@@ Operação Falhou! O valor informado é inválido @@@\n")

    return saldo,extrato

def sacar(*, saldo,valor,extrato,limite,numero_saques,limite_saque):
    excedeu_saldo = valor > saldo
    excedeu_limite = valor > limite
    excedeu_saque = numero_saques >= limite_saque

    if excedeu_saldo:
        print("\n@@@ Operação Falhou! Saldo insuficiente. @@@\n")
    
    elif excedeu_limite:
        print("\n@@@ Operação Falhou! O valor do saque excede o limite da conta. @@@\n")

    elif excedeu_saque:
        print("\n@@@ Operação Falhou! O limite de saque foi excedido. @@@\n")

    elif valor > 0:
        saldo -= valor
        extrato += f"Saque:\tR$ {valor:.2f}\n"
        numero_saques += 1
        print("\n=== Saque realizado com sucesso! ===\n")

    else:
        print("\n@@@ Operação Falhou! O valor informado é inválido. @@@\n")

    return saldo, extrato, numero_saques

def exibir_extrato(saldo,/,*,extrato):
    print ("\n===========EXTRATO==========")
    print ("Não foram realizadas movimentações." if not extrato else extrato)
    print (f"\nSaldo:\tR$ {saldo:.2f}")

def criar_usuario(usuarios):
    cpf = input("Informe seu CPF (somente números): ")
    usuario = filtrar_usuario(cpf,usuarios)

    if usuario:
        print("\n@@@ Já existe um usuário com o respectivo CPF! @@@\n")
        return

    nome = input("Insira seu nome completo: ")
    data_de_nascimento = input("Insira sua data de nascimento (dd/aa/mmmm): ")
    endereco = input("Insira seu endereço (logradouro - número - bairro - cidade - Estado): ")

    usuarios.append({"nome": nome, "data_nascimento": data_de_nascimento, "cpf": cpf, "endereco": endereco})
    print("\n=== Usuáro criado com sucesso ===\n")

def filtrar_usuario(cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None

def criar_conta(agencia,numero_conta,usuarios):
    cpf = input("Informe seu CPF (somente números): ")
    usuario = filtrar_usuario(cpf,usuarios)

    if usuario:
        print("\n=== usuário criado com sucesso! ===\n")
        return {"agencia": agencia, "numero_conta":  numero_conta, "usuario": usuario}
    
    print ("\n@@@ Usuário não encontrado! @@@\n")

def listar_contas(contas):
    for conta in contas:
        linha = f"""\
            Agência:\t{conta['agencia']}
            C/C:\t{conta['usuario']['nome']}
"""
        print ("=" * 100)
        print (textwrap.dedent(linha))

def main():
     LIMITE_SAQUES =3
     AGENCIA = "0001"

     saldo = 0
     limite = 500
     extrato = ""
     numero_de_saques = 0
     usuarios = []
     contas = []

     while True:
          opcao = menu ()

          if opcao == "d":
               valor = float(input("insira o valor do depósito: "))

               saldo, extrato = deposito(saldo,valor, extrato)

          elif opcao == "s":
               valor = float(input("Insira o valor do saque: "))

               saldo, extrato, numero_de_saques = sacar (
                    saldo= saldo,
                    valor=valor,
                    extrato= extrato,
                    limite= limite,
                    numero_saques= numero_de_saques,
                    limite_saque=LIMITE_SAQUES,
                    )
               print(f"Saldo: R${saldo:.2f}")
               print(f"Extrato: {extrato}")
               print(f"Número de saques: {numero_de_saques}")

          elif opcao == "e":
               exibir_extrato(saldo, extrato=extrato)

          elif opcao == "nu":
               criar_usuario(usuarios)

          elif opcao == "nc":
               numero_conta = len(contas) + 1
               conta = criar_conta(AGENCIA, numero_conta, usuarios)

               if conta:
                    contas.append(conta)

          elif opcao == "lc":
               listar_contas(contas)

          elif opcao == "q":
               break
          else:
               print ("Opção inválida. Tente novamente.")

main()
